openapi: 3.0.3
info:
  title: myFinanceMap - OpenAPI 3.0
  description: |-
    This is an OpenAPI 3.0 specification for the myFinanceMap application. All rights reserved to the respective owners.
    
    Creators:
    - Skobrák Erik Zsolt
    - Balogh Zsolt
    - Tátrai Péter
    - Tokai Tamás
  version: 1.0.11
externalDocs:
  description: Github
  url: http://swagger.io
servers:
  - url: https://localhost:8080
tags:
  - name: user
    description: Operations about user
paths:
  /users/{userId}:
    get:
      description: Get tha base data of a company by tax identification number or company registration number.
      operationId: getCegAlapadatok
      parameters:
        - description: 'The tax identification number of the company which data you would like to querying.'
          in: path
          name: userId
          required: true
          example: 1
          schema:
            type: string
        - $ref: '#/components/parameters/XSessionIdentifier'
        - $ref: '#/components/parameters/XClientAppName'
        - $ref: '#/components/parameters/XRequestId'
        - $ref: '#/components/parameters/XCorrelationId'
        - $ref: '#/components/parameters/XUserId'
        - $ref: '#/components/parameters/XBranchCode'
      responses:
        '200':
          description: "The request was successful."
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: "Unauthorized - invalid or missing token."
          headers:
            X-Error-Code:
              $ref: '#/components/headers/XErrorCode'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
        '500':
          description: "The server encountered an unexpected condition that prevented it from fulfilling the request."
          headers:
            X-Error-Code:
              $ref: '#/components/headers/XErrorCode'
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
      summary: Get base company data
      tags:
        - company-info-controller
components:
  schemas:
    ErrorMessageResponse:
      type: object
      description: "ErrorMessageResponse"
      required:
        - correlationId
        - messages
      properties:
        correlationId:
          description: "Unique identifier"
          type: string
        messages:
          description: "Unique identifier"
          type: array
          items:
            $ref: "#/components/schemas/ErrorMessage"
    ErrorMessage:
      type: "object"
      description: "ErrorMessage"
      required:
        - code
      properties:
        code:
          description: "Unique code of the error"
          type: "string"
        params:
          $ref: "#/components/schemas/ErrorMessageParam"
    ErrorMessageParam:
      description: "Error message parameters"
      type: "object"
      additionalProperties:
        type: "object"
    Profile:
      type: object
      properties:
        profileId:
          type: integer
          format: long
          description: Identifies the Profile object
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        birthDate:
          type: string
          format: date
        homeAddress:
          type: array
          items:
            $ref: '#/components/schemas/Address'
    Address:
      type: object
      properties:
        addressId:
          type: integer
          format: long
        postalCode:
          type: string
        country:
          type: string
        state:
          type: string
        city:
          type: string
        streetName:
          type: string
        streetType:
          type: string
        houseNumber:
          type: string
        afterHouseNumber:
          type: string
    User:
      type: object
      properties:
        userId:
          type: integer
          format: long
          description: Identifies the Profile object
        publicId:
          type: string
          description: unique id for every user
        username:
          type: string
        email:
          type: string
        password:
          type: string
        isAdmin:
          type: boolean
        registrationDate:
          type: string
          format: date
        profile:
          $ref: '#/components/schemas/Profile'
    Budget:
      type: object
      properties:
        budgetId:
          type: integer
          format: long
        user:
          $ref: '#/components/schemas/User'
        currency:
          type: string
        budgetCap:
          type: integer
          format: BigDecimal
      xml:
        name: tag
    Transaction:
      type: object
      properties:
        transactionId:
          type: integer
          format: long
        cost:
          type: integer
          format: BigDecimal
        paymentMethod:
          type: string
        user:
          $ref: '#/components/schemas/User'
    Shop:
      type: object
      properties:
        shopId:
          type: integer
          format: long
        category:
          $ref: '#/components/schemas/BusinessCategory'
        name:
          type: string
        coordinateX:
          type: string
        coordinateY:
          type: string
        address:
          $ref: '#/components/schemas/Address'
    BusinessCategory:
      type: object
      properties:
        categoryId:
          type: integer
          format: long
        categoryName:
          type: string
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
  headers:
    XErrorCode:
      description: "Identify the source system of the error"
      required: true
      schema:
        type: string
        example: apigee

  parameters:
    XSessionIdentifier:
      name: X-Session-Identifier
      in: header
      description: "Parameter to be identify the current session."
      schema:
        type: string
        example: 095090d3-935a-4e56-a684-a16eba522823
    XClientAppName:
      name: X-Client-App-Name
      in: header
      description: "Parameter to be identify the name of the caller application"
      schema:
        type: string
        example: "Name of the caller application"
    XRequestId:
      name: X-Request-ID
      in: header
      description: "Parameter to be identify the request"
      schema:
        type: string
        minLength: 8
        maxLength: 48
        example: "Unique request identifier"
    XCorrelationId:
      name: X-Correlation-ID
      in: header
      description: "Parameter to be identify the business flow of the request"
      schema:
        type: string
        minLength: 8
        maxLength: 48
        example: "Unique business flow identifier"
    XUserId:
      name: X-User-ID
      in: header
      description: "Parameter to be identify the user (identifier from AD)"
      schema:
        type: string
        example: "Unique user identifier"
    XBranchCode:
      name: X-Branch-Code
      in: header
      description: "Parameter to be define the user branch inside the organization (from AD)"
      schema:
        type: string
        example: "User branch code"

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []